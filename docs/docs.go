// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/change-password": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Altera a senha do usuário autenticado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Alterar senha",
                "parameters": [
                    {
                        "description": "Nova senha",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aurora_com_aurora-backend_internal_features_user_security_dto.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Autentica o usuário e retorna tokens de acesso",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Fazer login",
                "parameters": [
                    {
                        "description": "Credenciais de login",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aurora_com_aurora-backend_internal_features_user_security_dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user, access_token, refresh_token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "description": "Retorna uma lista de todos os eventos disponíveis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Listar todos os eventos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/aurora_com_aurora-backend_internal_features_events_dto.EventResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Cria um novo evento no sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Criar novo evento",
                "parameters": [
                    {
                        "description": "Dados do evento",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aurora_com_aurora-backend_internal_features_events_dto.CreateEventRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Event created successfully"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "description": "Retorna os dados de um evento específico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Buscar evento por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do evento",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/aurora_com_aurora-backend_internal_features_events_dto.EventResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove logicamente um evento do sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Deletar evento (soft delete)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do evento",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/orders": {
            "post": {
                "description": "Cria uma nova ordem de compra para um evento",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Criar nova ordem",
                "parameters": [
                    {
                        "description": "Dados da ordem",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aurora_com_aurora-backend_internal_features_order_dto.CreateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message, order_id",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tickets": {
            "post": {
                "description": "Cria N ingressos para um evento com base em uma ordem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "Criar ingressos",
                "parameters": [
                    {
                        "description": "Dados de compra de ingressos",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aurora_com_aurora-backend_internal_features_tickets_dto.PurchaseTicketRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Lista de ingressos criados",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/aurora_com_aurora-backend_internal_features_tickets_dto.TicketPurchasedResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Cria um novo usuário no sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Criar novo usuário",
                "parameters": [
                    {
                        "description": "Dados do usuário",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aurora_com_aurora-backend_internal_features_user_dto.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Retorna os dados de um usuário específico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Buscar usuário por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/aurora_com_aurora-backend_internal_features_user_dto.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Atualiza os dados de um usuário existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Atualizar usuário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados atualizados",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aurora_com_aurora-backend_internal_features_user_dto.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove um usuário do sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Deletar usuário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "aurora_com_aurora-backend_internal_features_events_dto.CreateEventRequest": {
            "description": "Representa o request de criação de um novo evento",
            "type": "object",
            "required": [
                "description",
                "end_time",
                "location",
                "start_time",
                "title",
                "total_tickets"
            ],
            "properties": {
                "description": {
                    "description": "@Descrição do evento",
                    "type": "string"
                },
                "end_time": {
                    "description": "@@2023-01-01T00:00:00Z",
                    "type": "string"
                },
                "location": {
                    "description": "@Local do evento",
                    "type": "string"
                },
                "start_time": {
                    "description": "@@2023-01-01T00:00:00Z",
                    "type": "string"
                },
                "title": {
                    "description": "@Titulo do evento",
                    "type": "string"
                },
                "total_tickets": {
                    "description": "@300",
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "aurora_com_aurora-backend_internal_features_events_dto.EventResponse": {
            "type": "object",
            "properties": {
                "available_tickets": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total_tickets": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "aurora_com_aurora-backend_internal_features_order_dto.CreateOrderRequest": {
            "description": "Representa o request de criação de uma nova ordem",
            "type": "object",
            "required": [
                "event_id",
                "quantity",
                "total_amount",
                "user_id"
            ],
            "properties": {
                "event_id": {
                    "description": "@ID do evento",
                    "type": "string"
                },
                "quantity": {
                    "description": "@1",
                    "type": "integer",
                    "minimum": 1
                },
                "total_amount": {
                    "description": "@100.00",
                    "type": "number"
                },
                "user_id": {
                    "description": "@ID do usuário",
                    "type": "string"
                }
            }
        },
        "aurora_com_aurora-backend_internal_features_tickets_domain.TicketStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "TicketValid",
                "TicketUsed",
                "TicketInvalid",
                "ticketCanceled"
            ]
        },
        "aurora_com_aurora-backend_internal_features_tickets_dto.PurchaseTicketRequest": {
            "description": "Representa o request de compra de um ticket",
            "type": "object",
            "required": [
                "event_id",
                "order_id",
                "purchase_price",
                "quantity",
                "user_id"
            ],
            "properties": {
                "event_id": {
                    "description": "@Id do evento",
                    "type": "string"
                },
                "order_id": {
                    "description": "@Id da compra",
                    "type": "string"
                },
                "purchase_price": {
                    "description": "@100.00",
                    "type": "number"
                },
                "qrcode_data": {
                    "description": "@base64",
                    "type": "string"
                },
                "quantity": {
                    "description": "@1",
                    "type": "integer",
                    "minimum": 1
                },
                "user_id": {
                    "description": "@Id do usuário",
                    "type": "string"
                },
                "valid_until": {
                    "description": "@2023-01-01T00:00:00Z",
                    "type": "string"
                }
            }
        },
        "aurora_com_aurora-backend_internal_features_tickets_dto.TicketPurchasedResponse": {
            "type": "object",
            "properties": {
                "issued_at": {
                    "type": "string"
                },
                "qrcode_data": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/aurora_com_aurora-backend_internal_features_tickets_domain.TicketStatus"
                },
                "valid_until": {
                    "type": "string"
                }
            }
        },
        "aurora_com_aurora-backend_internal_features_user_dto.CreateUserRequest": {
            "description": "Representa o request de criação de um novo usuário",
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "@SeuEmail@email.com",
                    "type": "string"
                },
                "name": {
                    "description": "@Seu nome",
                    "type": "string"
                },
                "password": {
                    "description": "@SuaSenha123@",
                    "type": "string",
                    "minLength": 8
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "teamId": {
                    "type": "string"
                },
                "type": {
                    "description": "@ADMIN\n@COLLABORATOR\n@COMMON",
                    "type": "string",
                    "enum": [
                        "COMMON",
                        "COLLABORATOR",
                        "ADMIN",
                        ""
                    ]
                }
            }
        },
        "aurora_com_aurora-backend_internal_features_user_dto.UpdateUserRequest": {
            "description": "Representa o request de atualização de um usuário",
            "type": "object",
            "properties": {
                "email": {
                    "description": "@SeuNovoEmail@email.com",
                    "type": "string"
                },
                "name": {
                    "description": "@Seu novo nome",
                    "type": "string"
                }
            }
        },
        "aurora_com_aurora-backend_internal_features_user_dto.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "aurora_com_aurora-backend_internal_features_user_security_dto.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "confirmPassword",
                "newPassword"
            ],
            "properties": {
                "confirmPassword": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "aurora_com_aurora-backend_internal_features_user_security_dto.LoginRequest": {
            "type": "object",
            "required": [
                "id_token"
            ],
            "properties": {
                "id_token": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
